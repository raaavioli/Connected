blogData =
{
   BlogEntry: [
      {
        title: "Initial concept idea created",
        images: ["images/concept.png"],
        text: "The concept idea, as the image may hint at, is to make an electrical circuitry simulation. While the image is very basic, it shows the general gist of what we want to capture, placing and connecting components to make circuits. What the images <i>doesn't</i> reveal is that we want to do it in VR, to allow proper 3D exploration, as you would do in reality. Also, while not yet fully determined, it would be cool to have a background react to failures or successes by the user. We'll  start off humbly, by implementing a 'sandbox' environment, with the possibility of gamifying it with solving problems in the future."
      },
      {
        title: "Light bulbs added",
        images: ["images/lightbulbs.png"],
        text: "There are now light bulbs in the game which work as light sources in the environment. The idea is that the light bulbs will be powered by batteries through wires in circuits.</br></br>To get the light nice and glowing, a post processing bloom filter was applied to the whole scene which gives this intense glow around the filaments."
      },
      {
        title: "VR environment created",
        images: ["images/vrgif.gif"],
        text: "Using HTC Vive, Steam VR, and Unity with OpenXR, we now have a basic VR environment to work within. To our surprise, the libraries used for working with VR in Unity has already most of the things cut out for us. There are already components existing to make objects interactable with the VR controllers in a way that we want to do. One major thorn for us, is the fact that we need physical sensor stations to register the headset movement. Yet, because we don't expect to be moving around much, this might be a lesser issue than initially imagined.</br>The gif shows us interacting with a generic object. It is even throwable! It might be cool to explore throwing components away that the user doesn't want anymore."
      },
      {
        title: "Workbenches added",
        images: ["images/workbenches.png", "images/woodenworkbench.png", "images/metalworkbench.png"],
        text: "Workbenches were created to have some for the player to work on their circuit. Workbenches are also meant to be used as storage, where the workbenches will provide items at the start of each round or when just playing the game. The workbenches have “tool markers” which are the orange/brown markers defining the area where an object would spawn. An orange area would mean that the object is available, and a brown area would mean that the object is missing or out of stock.</br></br>When creating the workbenches, we really wanted one of them to resemble those wooden crafting benches you see in any workshop, and the other to be a classic metallic workbench where you can store tools on the wall right behind it."
      },
      {
        title: "Simple electrical components added",
        images: ["images/knife-switch-model.png", "images/knife-switch-ref.png", "images/battery-model.png", "images/battery-ref.png"],
        text: "These two components for use on the electrical board have now been added. The battery is a C battery with a typical voltage of 1.5V and a storage capacity of up to 8000 mAh. A standard household light bulb requires 120V, so if we were to power one with typical C batteries, we would need to use 80 - this is why for the sake of convenience and simplicity, the model’s “voltage” can be adjusted in Unity, and the battery can be a representation of any other type of battery for the VR demonstrations.</br></br>The knife switch is often used in education due to the clarity of its design: it is very easy to see when the switch is on and when it is off, compared to e.g. a regular lightswitch. While this type of switch is no longer commonly used in real-life situations, it is very useful in scientific experiments such as the ones the students in grades 7-9 might be performing. This is why we have included it in the project, although we plan to also have other options such as a safety switch."
      },
      {
        title: "Container and garbage collection added",
        images: ["images/container.gif", "images/rustycontainer.png"],
        text: "A container was created to allow the player to destroy items created that are no longer needed nor in use. When creating the container, we wanted it to appear old, and thus be covered with some rusty patches along with the green worn out color. The containers have a script to destroy any items thrown into them.</br></br>Notice also that we are being kind here, letting the player throw all garbage into the same bin. This should not be done IRL. Batteries and lamps go into different bins!"
      },
      {
        title: "Wires, base plates and circuits added",
        images: ["images/wirecircuit.gif", "images/wirecollision.png", "images/wireSimulated.gif"],
        text: "From the start, the central concept of this project is circuits. At first we underestimated how much of a technical problem this would be. When we sat down to design the logic that would check if a circuit was closed and calculate the current, we realized that to make an entire circuit that allows for infinite complexity, we would have to solve the halting problem, which is famously undecidable. We simplified a bit and stuck to only serial circuits at the start, and that worked well! In order to make the components possible to connect together without causing too much confusion, we created plastic base plates with little rubber feet and slots for the wire connectors to go into. Then it came to the actual wires, having them flop around was important, but simulating those floppy physics as well as collisions, and dynamic mesh generation is quite a challenge. Then creating shaders for showing the polarity of the slots the wires are connected to, as well as showing the direction of the current inside, is quite complex as well. The end result is pretty satisfying, though!"
      },
      {
        title: "Different kinds of switch models added",
        images: ["images/newswitches.png"],
        text: "There are many kinds of switches used in real-life electrical circuits and in everyday appliances such as ceiling lights. Therefore, we included a regular flip switch that is likely to be very recognisable to the students from commonplace lights at home. As mentioned in a previous post, the knife switch, while not found in most non-educational contexts, is often used in scientific demonstrations and experiments. By having both, we aim to represent these two contexts and highlight that different-looking tools and components can sometimes serve the same purpose. The knife switch in the newest version has been replaced with a double-sided model for no other reason than looking cooler."
      },
      {
        title: "Radio and placeholder audio added",
        images: ["images/connectedradio.png", "images/radio.png"],
        text: "A radio was created to allow the player to interactively play music in the environment. The player is able to connect the radio into a circuit with a battery, select track/radio channel and change volume; like you would expect from a real radio!</br></br>The player can interactively change the volume, sound and plug in/out wires onto/from the device to enable/disable it. The main purpose of having a radio is to give the player some options for what audio to play, and also to serve as an easter egg, as you would not expect to be able to interactively change music in most games.</br></br>The radio may look old, but it works exceptionally well for its age!"
      },
      {
        title: "Item spawners added",
        images: ["images/spawners.gif"],
        text: "At first, there was an idea to use a built in object in the SteamVR library that allows us to hold items, however, this object did not work as a spawner that could spawn multiple objects. Therefore, after some painful debugging in vain, i decided to create my own spawner. This new spawner is given an object that is placed in the hand of the user when they interact with it. To do this, we simply check of the user is hovering over the spawner and holding down the trigger. Then, there is a built-in function in the SteamVR library that can place and object directly into the hand of the player."
      },
      {
        title: "Workshop room created",
        images: ["images/room.gif"],
        text: "While developing the components and interactions, it was useful to use a default scene with just a plane that had teleportation enabled where we could place objects for testing. However, we were sure at an early point that we would like a smaller play area inside a room that looked like it was inside a school. The room should be small enough to have no need for teleportation, since teleportation is an additional interaction that is not essential for the experience. Some iterations were required in order to get the room small enough to let the player reach everything, but large enough to fit all the objects. The final room can be seen in the gif, complete with a trashcan, workbench, door, baseboard, lamp, and window with a cityscape outside. Testing has showed that the room is of an appropriate size for the interaction, while not feeling cramped."
      },
      {
        title: "Decorations for the room scene added",
        images: ["images/decorations.png"],
        text: "Even though we have tools that players can use to make a circuit and even play a radio, there is some empty space in the scene, especially when it comes to the wooden workbench. Therefore we have added some tools - a screwdriver and a pair of pliers - that add to the atmosphere and may give the environment more of a “workshop” feel. These models are therefore used as decorations on top of the wooden workbench, giving the impression that they were left there by someone who was tinkering in the room. While they do not add any functionality to the project, small details can sometimes improve the overall feeling we are going for."
      },
      {
        title: "Sound effects added",
        images: ["images/noimage.png"],
        text: "Aside from the radio music added earlier, we needed more sound interaction. Seeing as the project has shaped up pretty well to a compact and well-limited product, and there's some time over, tackling sound design <em>sounded</em> (hehe) good. So now there is ambient sound in the workshop, resembling the quiet buzz in an otherwise quiet room, with sound leeching in from an industrial building. All components have realistic sound effects as a feedback mechanism, some of which were found on free and public sources online, while others needed to be recorded by me at home using <em>a lot </em> of creativity. Unfortunately, some component additions haven't made it through to be added to the project, so the sound effects for those ended up unused. :( Due to the non-visual nature of sound, there is no real image to be shown, but <a href='https://drive.google.com/drive/folders/1i7yW2C6z8S5nBjgBNdHj3zjb0BPZpqmi?usp=sharing'>here</a> are all the sound effects I produced, along with proper names. Feel free to use them yourself, if you wish. Just contact me first. :)"
      },
      {
        title: "Item limits implemented",
        images: ["images/limiters.gif"],
        text: "A potential problem with our game is performance, therefore, it is a good idea to limit how many objects can be in the game at once. This would also serve as a gameplay element, as with fever components, the user would have to think about how to build something with the tools availiable. To solve this, i added a counter to the item spawners and increase this whenever a new component is taken from that spawner. Then i also added some code to the objects themselves that runs whenever the object is thrown into the trash. This code tells the spawner that there is one less component in the game, so that another can be spawned. I also added similar code to the script for spawning wires in the hands, and then i also added a text element to the spawner so that the player can see how many more can be spawned"
      },
      {
        title: "Throwing minigame added",
        images: ["images/bestscene.gif"],
        text: "As a final touch to the experience, someone suggested we should add a small throwing minigame where you score points for throwing components into bins. Throwing components had already been known as one of the most fun things about the experience, so it feels natural that it was made into an easter egg scene with a minigame about it. We also rotated the window open and added a feature where components are destroyed when thrown out, and a sound of a person getting hit by it is played."
      },
      {
        title: "The project is finished.",
        images: ["images/logo.png"],
        text: "The short month of development has passed, and even though we went head on to this second project after being exhausted by the initial one, our hard work has managed to output something we're proud to have created. We've created a proof of concept, that you <em>can</em> in fact created a virtual learning environment, and more specifically for circuitry. While the limited time allowed us to only implement a few features, it is obvious to us that it could be expanded to be more conclusive to today's state of circuitry, given enough time of course. Having observed uninvolved users enjoy our project, provides great satisfaction to our efforts. Another fun learning and development experience has been had, and to anyone who has involved themselves, thank you. Until the next time!"
      }
   ]
}
